@model Synchronic_World.Models.User

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.ActionLink("Return to users", "manageUsers", "Admin")

<div id="registerContent">
    <h2>Edit user</h2>

    @using (Html.BeginForm(actionName: "editUser", controllerName: "Admin", method: FormMethod.Post))
    {
    <!--<form action="/User/AddUser" method="post">-->
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="editor-label">
            @Html.LabelFor(model => model.firstname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.firstname)
            @Html.ValidationMessageFor(model => model.firstname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastname)
            @Html.ValidationMessageFor(model => model.lastname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.birthday)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.birthday)
            @Html.ValidationMessageFor(model => model.birthday)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.mail)<span class="required">&nbsp;*</span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.mail)
            @Html.ValidationMessageFor(model => model.mail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.password)<span class="required">&nbsp;*</span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.password)
            @Html.ValidationMessageFor(model => model.password)
        </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.role)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.role, new { type = "number" })
        @Html.ValidationMessageFor(model => model.role)
    </div>

        <p>
            <button type="submit">Edit</button>
        </p>

        if (ViewBag != null)
        {
            <p style="color:green;">@ViewBag.Message</p>
        }
    <!--</form>-->
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
